{"version":3,"sources":["webpack:///./src/app/services/cartao.service.ts","webpack:///./src/app/services/parametros.service.ts","webpack:///./src/app/services/tags.service.ts"],"names":[],"mappings":"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","file":"common.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';  \nimport { map } from 'rxjs/operators';\n\nimport {environment} from '../../environments/environment';\n \n@Injectable({providedIn: 'root'})\nexport class CartaoService {\n\n    constructor(private http: HttpClient) { }\n\n    public find(): Observable<any[]> {\n        return this.http.get<any[]>(this.RESOURCE());\n        // .pipe(\n        //     map((response: any) => response.map(i => ({ ...i, codigo:i.id })))\n        //   );\n    }\n\n    public findAtivos(): Observable<any[]> {\n        return this.http.get<any[]>(this.RESOURCE()+\"/ativos\");\n        // .pipe(\n        //     map((response: any) => response.map(i => ({ ...i, codigo:i.id })))\n        //   );\n    }\n\n    public save(objeto: any): Observable<any> {\n        if (objeto.codigo > 0) {\n            objeto.id = objeto.codigo;\n            return this.http.put<any>(this.RESOURCE(objeto.codigo), objeto);\n        } else {\n            return this.http.post<any>(this.RESOURCE(), objeto); \n        }\n    }\n\n    public alterarStatus(objeto:any): Observable<any> {\n        if (objeto.ativo) {\n            objeto.ativo = false;\n            return this.http.put<any>(this.RESOURCE(objeto.codigo)+'/desativar', objeto);\n        } else {\n            objeto.ativo = true;\n            return this.http.put<any>(this.RESOURCE(objeto.codigo)+'/ativar', objeto);\n        }\n    } \n\n    public remove(codigo: number): Observable<any> {\n        return this.http.delete<any>(this.RESOURCE(codigo));\n    }   \n\n    /***************************************************************************************************\n     * \n     ***************************************************************************************************/\n    public findFaturas(codigo: number): Observable<any> {\n        return this.http.get<any[]>(this.RESOURCE(codigo)+\"/faturas\");\n    }   \n\n    /***************************************************************************************************\n     * \n     ***************************************************************************************************/\n    public findDatasFaturas(codigo: number): Observable<any> {\n        return this.http.get<any[]>(this.RESOURCE(codigo)+\"/faturas/datas\");\n    }   \n\n    /***************************************************************************************************\n     * \n     ***************************************************************************************************/\n    public findParcelas(codigo: number, data:string): Observable<any> {\n        return this.http.get<any[]>(this.RESOURCE(codigo)+`/faturas/${data}/parcelas`);\n    }   \n\n    /***************************************************************************************************\n     * RESOURCE\n     ***************************************************************************************************/\n    public RESOURCE(codigo?: number): string {\n        return `${environment.rest_url}/cartoes${codigo > 0 ? '/' + codigo : ''}`;\n    }  \n}","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';  \nimport { map } from 'rxjs/operators';\n\nimport {environment} from '../../environments/environment';\n \n@Injectable({providedIn: 'root'})\nexport class ParametrosService {\n\n    constructor(private http: HttpClient) { }\n\n    public findGrupos(): Observable<any[]> {\n        return this.GET(\"grupos\");\n    } \n\n    public findPeriodos(): Observable<any[]> {\n        return this.GET(\"periodos\");\n    }  \n\n    /***************************************************************************************************\n     * RESOURCE\n     ***************************************************************************************************/\n    public GET(path:string): Observable<any[]> {\n        return this.http.get<any[]>(`${environment.rest_url}/${path}`);\n    }  \n}","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';  \n\nimport {environment} from '../../environments/environment';\n \n@Injectable({providedIn: 'root'})\nexport class TagsService {\n\n    constructor(private http: HttpClient) { }\n\n    public findTags(): Observable<any[]> {\n        return this.http.get<any[]>(this.RESOURCE());\n    }\n\n    public saveTag(objeto: any): Observable<any> {\n        if (objeto.codigo > 0) {\n            objeto.id = objeto.codigo;\n            return this.http.put<any>(this.RESOURCE(objeto.codigo), objeto);\n        } else {\n            return this.http.post<any>(this.RESOURCE(), objeto);\n        }\n    }\n\n    public removeTag(codigo: number): Observable<any> {\n        return this.http.delete<any>(this.RESOURCE(codigo));\n    }   \n\n    /***************************************************************************************************\n     * RESOURCE\n     ***************************************************************************************************/\n    public RESOURCE(codigo?: number): string {\n        return `${environment.rest_url}/tags${codigo > 0 ? '/' + codigo : ''}`;\n    }  \n}"],"sourceRoot":""}