{"version":3,"sources":["webpack:///./src/app/funcionalidades/tags/modals/tag/tag.modal.html","webpack:///./src/app/funcionalidades/tags/modals/tag/tag.modal.scss","webpack:///./src/app/funcionalidades/tags/modals/tag/tag.modal.ts","webpack:///./src/app/funcionalidades/tags/pages/tags/tags.html","webpack:///./src/app/funcionalidades/tags/pages/tags/tags.scss","webpack:///./src/app/funcionalidades/tags/pages/tags/tags.ts","webpack:///./src/app/funcionalidades/tags/tags-routing.module.ts","webpack:///./src/app/funcionalidades/tags/tags.module.ts"],"names":[],"mappings":"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","file":"funcionalidades-tags-tags-module.js","sourcesContent":["module.exports = \"<div id=\\\"tag-modal\\\" class=\\\"ss-modal\\\" style=\\\"display:block;\\\">     \\n    <div class=\\\"ss-modal-content\\\" style=\\\"width: 500px;\\\">\\n\\n        <div class=\\\"ss-modal-header\\\">\\n            <span class=\\\"ss-modal-btnclose\\\" (click)=\\\"fechar()\\\">&times;</span>\\n            <h5>Cadastro de Tag</h5>\\n        </div>\\n \\n        <div class=\\\"ss-modal-body\\\" > \\n\\n            <div class=\\\"ss-form-group\\\" >\\n                <label>Nome <span class=\\\"campo-obrigatorio-label\\\" >*</span></label>\\n                <div class=\\\"ss-addon\\\" >    \\n                    <input class=\\\"ss-form-control\\\"  [(ngModel)]=\\\"tag.nome\\\" type=\\\"text\\\" maxlength=\\\"250\\\" placeholder=\\\"Nome\\\" scInput >\\n                </div> \\n            </div> \\n    \\n        </div>\\n\\n        <div class=\\\"ss-modal-footer\\\">  \\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-sm-4\\\">\\n                </div>\\n                <div class=\\\"col-sm-4\\\">\\n                    <botao label=\\\"Salvar\\\" tipo=\\\"success\\\" (click)=\\\"salvar()\\\"></botao>\\n                </div>\\n                <div class=\\\"col-sm-4\\\">\\n                    <botao label=\\\"Fechar\\\" tipo=\\\"outline-default\\\" (click)=\\\"fechar()\\\"></botao>\\n                </div>\\n            </div>\\n        </div>\\n        \\n    </div> \\n</div> \\n\\n\\n \"","module.exports = \"#tag-modal .ss-modal-body {\\n  margin-top: 20px;\\n  margin-left: 20px;\\n  margin-right: 20px; }\\n\"","import { Component, Inject } from '@angular/core'; \n\nimport { Constantes } from 'src/app/core/util/constantes';\nimport { AlertaService } from 'src/app/services/alerta.service';\nimport { ActionBarRef, ACTIONBAR_DATA } from 'src/app/core/components/actionbar';\nimport { TagsService } from 'src/app/services/tags.service';\n \n@Component({\n  selector: 'app-tag-modal',\n  templateUrl:'tag.modal.html' ,\n  styleUrls: ['tag.modal.scss']\n})\nexport class TagModal {\n\n    public tag: any;\n\n    /***************************************************************************************************\n     *            Construtor de pobre\n     ***************************************************************************************************/\n    constructor(public actionBarRef: ActionBarRef\n              , @Inject(ACTIONBAR_DATA) public data: any\n              , public tagsService:TagsService\n              , private alertaService:AlertaService ) {\n        if(data.tag){\n            this.tag = Object.assign({}, JSON.parse(JSON.stringify(data.tag)));  \n        }else{\n            this.tag = {nome:''};  \n        }\n    }\n\n    /***************************************************************************************************\n     * fecha a tela e volta para a tela anterior\n     ***************************************************************************************************/\n    public fechar(valor = 'Fechado') {\n        this.actionBarRef.close({ ...this.data, valor: valor });\n    } \n \n    /***************************************************************************************************\n     * salva o laudo da fiscalização\n     ***************************************************************************************************/\n    public salvar(){ \n        let mensagem = `Tag salva com sucesso!`;\n        this.tagsService.saveTag(this.tag).subscribe(\n            () => {  \n                this.data.tag = this.tag; \n                this.alertaService.sucesso(mensagem);\n                this.fechar(Constantes.SUCESSO);\n            }  \n        ); \n    }\n \n}\n","module.exports = \"<div class=\\\"ss-table ss-table-striped ss-table-sortable\\\">\\n  <table [mfData]=\\\"lista$ | async\\\" #mf=\\\"mfDataTable\\\" [mfRowsOnPage]=\\\"10\\\">\\n    <thead>\\n      <tr>\\n        <th>ID</th> \\n        <th>Nome</th> \\n        <th>Data de Cadastro</th> \\n        <th>Última Alteração</th> \\n        <th></th>\\n        <th></th>\\n      </tr>\\n    </thead>\\n    <tbody>\\n      <tr *ngFor=\\\"let tag of mf.data\\\">\\n        <td>{{ tag.codigo }}</td> \\n        <td>{{ tag.nome }}</td> \\n        <td>{{ tag.dataInclusao }}</td> \\n        <td>{{ tag.dataAlteracao }}</td> \\n        <td>\\n          <botao icon=\\\"edit\\\" label=\\\"\\\" tipo=\\\"outline-warning\\\" (click)=\\\"editar(tag)\\\" class=\\\"width-30\\\"></botao>\\n        </td>\\n        <td>\\n            <botao icon=\\\"close\\\" label=\\\"\\\" tipo=\\\"danger\\\" (click)=\\\"remover(tag)\\\" class=\\\"width-30\\\"></botao>\\n        </td>\\n      </tr>\\n    </tbody>\\n    <tfoot>\\n      <tr>\\n        <td colspan=\\\"6\\\" style=\\\"background-color: #F5F7F8 !important;\\\">\\n          <mfBootstrapPaginator [rowsOnPageSet]=\\\"[5,10,25]\\\"></mfBootstrapPaginator>\\n        </td>\\n      </tr>\\n    </tfoot>\\n  </table>\\n</div>\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';   \n \n\nimport { Constantes } from 'src/app/core/util/constantes';\nimport { ActionBarService } from 'src/app/core/components/actionbar';\nimport { TagsService } from 'src/app/services/tags.service';\nimport { TagModal } from '../../modals/tag/tag.modal';\nimport { AlertaService } from 'src/app/services/alerta.service';\n\n/***********************************\n*  Tela Cadastro de Tags\n*  @Aplicativo SCAF WEB\n*  @Autor willian.maruno\n***********************************/\n@Component({\n  selector: 'app-tags', \n  templateUrl: './tags.html',\n  styleUrls: ['./tags.scss']\n})\nexport class TagsPage implements OnInit{ \n\n  public lista$:Observable<any[]>; \n\n  /***************************************************************************************************\n   *            Construtor de pobre\n   ***************************************************************************************************/\n  constructor(private actionBarService:ActionBarService\n            , public tagsService:TagsService \n            , private alertaService:AlertaService) { \n  }\n\n  /***************************************************************************************************\n   * inicia os componentes\n   ***************************************************************************************************/\n  ngOnInit() {\n    this.pesquisar(); \n  } \n\n /***************************************************************************************************\n  *  realiza a pesquisa de novas fiscalizações\n  ***************************************************************************************************/ \n  public pesquisar() { \n    this.lista$ = this.tagsService.findTags();\n  }\n\n /***************************************************************************************************\n  * abre a tela de ações\n  ***************************************************************************************************/ \n  public editar(tag:any){   \n    this.actionBarService.open(TagModal, {data: {tag: tag}}).afterClosed().subscribe((result?:any) => {\n      if(result && result.valor === Constantes.SUCESSO){\n        this.pesquisar();\n      }\n    });\n  }  \n\n  /***************************************************************************************************\n   *  realiza a pesquisa de novas fiscalizações\n   ***************************************************************************************************/\n  public remover(tag:any) {\n\n\n   let msg = `Deseja mesmo excluir a Etiqueta \"${tag.nome}\"`;\n   this.alertaService.confirmar(\"Exclusão de Etiqueta\", msg).subscribe((data?:any)=>{\n     console.log(data);\n     if(data && data.resultado && data.resultado == Constantes.CONFIRMADO){\n       this.tagsService.removeTag(tag.codigo).subscribe((r?)=>{\n        this.alertaService.sucesso(`Etiqueta \"${tag.nome}\" excluída com sucesso!`);\n        this.pesquisar();\n       }); \n     }\n   });\n\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { TagsPage } from './pages/tags/tags';\n\nconst routes: Routes = [{\n  path: '', component: TagsPage\n}];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class TagsRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { DataTableModule } from \"angular-6-datatable\";\n \nimport { ComponentModule } from 'src/app/core/components/component.module';\nimport { ModalsModule } from 'src/app/modals/modals.module';\nimport { ActionbarModule } from 'src/app/core/components/actionbar';\nimport { TagsPage } from './pages/tags/tags';\nimport { TagsRoutingModule } from './tags-routing.module';\nimport { TagModal } from './modals/tag/tag.modal';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    DataTableModule,\n    ActionbarModule, \n    FormsModule,\n    ComponentModule,\n    ModalsModule,\n    TagsRoutingModule\n  ],\n  declarations: [TagsPage, TagModal ], \n  entryComponents:[ TagModal ]\n})\nexport class TagsModule { }\n"],"sourceRoot":""}