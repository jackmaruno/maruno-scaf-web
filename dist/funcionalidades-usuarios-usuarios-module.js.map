{"version":3,"sources":["webpack:///./src/app/funcionalidades/usuarios/modals/usuario/usuario.modal.html","webpack:///./src/app/funcionalidades/usuarios/modals/usuario/usuario.modal.scss","webpack:///./src/app/funcionalidades/usuarios/modals/usuario/usuario.modal.ts","webpack:///./src/app/funcionalidades/usuarios/pages/usuarios/usuarios.html","webpack:///./src/app/funcionalidades/usuarios/pages/usuarios/usuarios.scss","webpack:///./src/app/funcionalidades/usuarios/pages/usuarios/usuarios.ts","webpack:///./src/app/funcionalidades/usuarios/usuarios-routing.module.ts","webpack:///./src/app/funcionalidades/usuarios/usuarios.module.ts","webpack:///./src/app/services/usuario.service.ts"],"names":[],"mappings":"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","file":"funcionalidades-usuarios-usuarios-module.js","sourcesContent":["module.exports = \"<div id=\\\"usuario-modal\\\" class=\\\"ss-modal\\\" style=\\\"display:block;\\\">     \\n    <div class=\\\"ss-modal-content\\\" style=\\\"width: 800px;\\\">\\n\\n        <div class=\\\"ss-modal-header\\\">\\n            <span class=\\\"ss-modal-btnclose\\\" (click)=\\\"fechar()\\\">&times;</span>\\n            <h5>Cadastro de Usu√°rio</h5>\\n        </div> \\n\\n        <div class=\\\"ss-modal-body\\\" > \\n            <div class=\\\"ss-form-group\\\" >\\n                <label>Nome </label>\\n                <div class=\\\"ss-addon\\\" >    \\n                    <span class=\\\"ss-form-control campo-bloqueado\\\">{{usuario.nome}}</span>\\n                </div> \\n            </div> \\n            \\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-sm-8\\\">\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-sm-6\\\">\\n                            <div class=\\\"ss-form-group\\\" >\\n                                <label>Perfil <span class=\\\"campo-obrigatorio-label\\\" >*</span></label>\\n                                <ng-select [items]=\\\"listPerfis\\\" bindLabel=\\\"nome\\\"  placeholder=\\\"Selecione\\\" [(ngModel)]=\\\"usuario.perfil\\\"></ng-select> \\n                            </div>  \\n                        </div>\\n                        <div class=\\\"col-sm-6\\\">\\n                            <div class=\\\"ss-form-group\\\" >\\n                                <label>Login </label>\\n                                <div class=\\\"ss-addon\\\" >    \\n                                    <span class=\\\"ss-form-control campo-bloqueado\\\">{{usuario.login}}</span>\\n                                </div> \\n                            </div> \\n                        </div>\\n\\n                        <div class=\\\"col-sm-6\\\">\\n                            <div class=\\\"ss-form-group\\\" >\\n                                <label>E-mail <span class=\\\"campo-obrigatorio-label\\\" >*</span></label>\\n                                <div class=\\\"ss-addon\\\" >    \\n                                    <input class=\\\"ss-form-control\\\"  [(ngModel)]=\\\"usuario.email\\\" type=\\\"text\\\" scInput >\\n                                </div> \\n                            </div> \\n                        </div>\\n                        <div class=\\\"col-sm-6\\\">\\n                            <div class=\\\"ss-form-group\\\" >\\n                                <label>CPF </label>\\n                                <div class=\\\"ss-addon\\\" >    \\n                                    <!-- <input class=\\\"ss-form-control\\\"  [(ngModel)]=\\\"usuario.cpf\\\" type=\\\"text\\\" maxlength=\\\"14\\\" placeholder=\\\"CPF\\\" scInput > -->\\n                                    <!-- <input [(ngModel)]=\\\"usuario.cpf\\\" maxlength=\\\"18\\\" type=\\\"tel\\\" mascara=\\\"CPF-CNPJ\\\"  class=\\\"ss-form-control\\\" > -->\\n                                    <cpf [(ngModel)]=\\\"usuario.cpf\\\" class=\\\"input-cpf\\\"></cpf>\\n                                </div> \\n                            </div> \\n                        </div>\\n\\n                        <div class=\\\"col-sm-6\\\">\\n                            <div class=\\\"ss-form-group\\\" >\\n                                <label>Telefone </label>\\n                                <div class=\\\"ss-addon\\\" >    \\n                                    <telefone [(ngModel)]=\\\"usuario.telefone\\\" class=\\\"input-cpf\\\" ></telefone>\\n                                </div> \\n                            </div> \\n                        </div>\\n                        <div class=\\\"col-sm-6\\\">\\n                            <div class=\\\"ss-form-group\\\" >\\n                                <label>Celular </label>\\n                                <div class=\\\"ss-addon\\\" >    \\n                                    <telefone [(ngModel)]=\\\"usuario.celular\\\" class=\\\"input-cpf\\\" ></telefone>\\n                                </div> \\n                            </div> \\n                        </div>\\n                        \\n                    </div>\\n                </div>\\n                <div class=\\\"col-sm-4\\\">\\n                    <img class=\\\"ss-user-img\\\" [src]=\\\"usuario.foto? usuario.foto:'assets/images/ico-person.svg'\\\"> \\n                </div>\\n            </div>\\n\\n            \\n\\n\\n\\n\\n\\n        </div>\\n\\n        <div class=\\\"ss-modal-footer\\\" style=\\\"height: 65px;\\\">   \\n            <div style=\\\"float: right;\\\">\\n                <botao label=\\\"Salvar\\\" formato=\\\"inline\\\" tipo=\\\"success\\\" (click)=\\\"salvar()\\\" ></botao>\\n                <botao label=\\\"Fechar\\\" formato=\\\"inline\\\" tipo=\\\"outline-default\\\" (click)=\\\"fechar()\\\" ></botao> \\n            </div> \\n        </div>\\n    </div> \\n</div> \"","module.exports = \"#usuario-modal .ss-modal-body {\\n  margin-top: 20px;\\n  margin-left: 20px;\\n  margin-right: 20px; }\\n\\n#usuario-modal .campo-bloqueado {\\n  background-color: rgba(7, 7, 7, 0.048); }\\n\\n#usuario-modal .input-cpf2 {\\n  width: 100% !important;\\n  border: 1px solid #34495E !important;\\n  border-radius: 4px; }\\n\\n#usuario-modal .input-cpf {\\n  border-radius: 4px !important;\\n  border: 1px solid #34495E !important;\\n  background-color: transparent !important;\\n  width: 100% !important;\\n  color: #34495E !important; }\\n\\n#usuario-modal .input-cpf input {\\n    height: 36px !important;\\n    background-color: transparent !important;\\n    color: #34495E !important; }\\n\"","import { Component, Inject } from '@angular/core'; \n\nimport { Constantes } from 'src/app/core/util/constantes';\nimport { AlertaService } from 'src/app/services/alerta.service';\nimport { ActionBarRef, ACTIONBAR_DATA } from 'src/app/core/components/actionbar';\nimport { UsuarioService } from 'src/app/services/usuario.service';\n \n@Component({\n  selector: 'app-usuario-modal',\n  templateUrl:'usuario.modal.html' ,\n  styleUrls: ['usuario.modal.scss']\n})\nexport class UsuarioModal {\n\n    public usuario: any; \n    public listPerfis:any[];  \n\n    /***************************************************************************************************\n     *            Construtor de pobre\n     ***************************************************************************************************/\n    constructor(public actionBarRef: ActionBarRef\n              , @Inject(ACTIONBAR_DATA) public data: any\n              , public usuarioService:UsuarioService\n              , private alertaService:AlertaService ) {\n        this.listPerfis = data.listPerfis;   \n        if(data.usuario){\n            this.usuario = Object.assign({}, JSON.parse(JSON.stringify(data.usuario)));   \n        }else{\n            this.usuario = {nome:''};  \n        }\n    }\n\n    /***************************************************************************************************\n     * fecha a tela e volta para a tela anterior\n     ***************************************************************************************************/\n    public fechar(valor = 'Fechado') {\n        this.actionBarRef.close({ ...this.data, valor: valor });\n    } \n \n    /***************************************************************************************************\n     * salva o laudo da fiscaliza√ß√£o\n     ***************************************************************************************************/\n    public salvar(){ \n        let mensagem = `Usu√°rio salvo com sucesso!`;\n        this.usuarioService.save(this.usuario).subscribe(\n            () => {  \n                this.data.usuario = this.usuario; \n                this.alertaService.sucesso(mensagem);\n                this.fechar(Constantes.SUCESSO);\n            }  \n        ); \n    }\n \n}\n","module.exports = \"<div class=\\\"ss-table ss-table-striped ss-table-sortable\\\">\\n  <table [mfData]=\\\"lista$ | async\\\" #mf=\\\"mfDataTable\\\" [mfRowsOnPage]=\\\"10\\\">\\n    <thead>\\n      <tr>\\n        <th>ID</th> \\n        <th>Nome</th> \\n        <th>Login</th>\\n        <th>Perfil</th>\\n        <th>Data de Cadastro</th> \\n        <th>Respons√°vel Cadastro</th> \\n        <th>√öltima Altera√ß√£o</th> \\n        <th>Respons√°vel  Altera√ß√£o</th> \\n        <th></th>\\n      </tr>\\n    </thead>\\n    <tbody>\\n      <tr *ngFor=\\\"let usuario of mf.data\\\">\\n        <td>{{ usuario.codigo }}</td> \\n        <td>{{ usuario.nome }}</td> \\n        <td>{{ usuario.login }}</td> \\n        <td>{{ usuario.perfil.nome }}</td> \\n        <td>{{ usuario.dataCadastro }}</td> \\n        <td>{{ usuario.responsavelCadastro.nome }}</td> \\n        <td>{{ usuario.dataAtualizacao }}</td> \\n        <td>{{ usuario.responsavelAtualizacao?usuario.responsavelAtualizacao.nome:'' }}</td> \\n        <td>\\n          <botao [icon]=\\\"usuario.ativo? 'remove_circle' : 'check_circle'\\\" label=\\\"\\\" [tipo]=\\\"usuario.ativo? 'outline-danger' : 'outline-success'\\\" (click)=\\\"alterarStatus(usuario, usuario.ativo? 'Inativar' : 'Ativar')\\\" class=\\\"width-50\\\" formato=\\\"inline\\\"></botao>\\n          <botao icon=\\\"edit\\\" label=\\\"\\\" tipo=\\\"outline-warning\\\" (click)=\\\"editar(usuario)\\\" class=\\\"width-50\\\" formato=\\\"inline\\\"></botao>\\n          <botao icon=\\\"close\\\" label=\\\"\\\" tipo=\\\"danger\\\" (click)=\\\"remover(usuario)\\\" class=\\\"width-50\\\" formato=\\\"inline\\\"></botao>\\n        </td>\\n      </tr>\\n    </tbody>\\n    <tfoot>\\n      <tr>\\n        <td colspan=\\\"9\\\" style=\\\"background-color: #F5F7F8 !important;\\\">\\n          <mfBootstrapPaginator [rowsOnPageSet]=\\\"[5,10,25]\\\"></mfBootstrapPaginator>\\n        </td>\\n      </tr>\\n    </tfoot>\\n  </table>\\n</div>\\n\\n\\n<ng-template #filtrosSidebar > \\n    <div class=\\\"row sidebar-content\\\" >\\n        <div class=\\\"col-sm-12 row-sub-header\\\">Filtros de pesquisa</div>\\n        <div class=\\\"col-sm-12 row-header\\\"><HR></div> \\n\\n        <div class=\\\"ss-form-group col-sm-12 \\\">\\n          <label>Nome</label> \\n          <div class=\\\"ss-addon\\\" >    \\n            <input class=\\\"ss-form-control\\\" [(ngModel)]=\\\"filtro.nome\\\" maxlength=\\\"100\\\" type=\\\"text\\\"  (keyup)=\\\"onKey($event)\\\">\\n          </div>\\n        </div>\\n\\n        <div class=\\\"ss-form-group col-sm-12 \\\">\\n          <label>Login</label> \\n          <div class=\\\"ss-addon\\\" >    \\n            <input class=\\\"ss-form-control\\\" [(ngModel)]=\\\"filtro.login\\\" maxlength=\\\"100\\\" type=\\\"text\\\"  (keyup)=\\\"onKey($event)\\\">\\n          </div>\\n        </div>\\n \\n        <div class=\\\"ss-form-group col-sm-12 row-col\\\" >\\n            <label>Perfil </label>\\n            <ng-select [items]=\\\"listPerfis\\\" bindLabel=\\\"nome\\\" bindValue=\\\"codigo\\\" placeholder=\\\"Selecione\\\" [(ngModel)]=\\\"filtro.codPerfil\\\"></ng-select> \\n        </div>   \\n \\n        <div class=\\\"col-sm-12\\\">&nbsp;</div>\\n\\n        <div class=\\\"col-sm-12\\\"> \\n          <botao icon=\\\"search\\\" label=\\\"Pesquisar\\\" tipo=\\\"success\\\" (click)=\\\"pesquisar()\\\"></botao>\\n        </div>   \\n\\n        <div class=\\\"col-sm-12\\\"> \\n          <botao icon=\\\"undo\\\" label=\\\"Limpar\\\" tipo=\\\"outline-default\\\" (click)=\\\"limpar()\\\"></botao>\\n        </div>  \\n        <div class=\\\"col-sm-12\\\">&nbsp;</div> \\n    </div> \\n</ng-template> \"","module.exports = \"\"","import { Component, OnInit, ViewChild, TemplateRef } from '@angular/core';\nimport { Observable } from 'rxjs';   \nimport { TemplatePortal } from '@angular/cdk/portal';\n \n\nimport { Constantes } from 'src/app/core/util/constantes';\nimport { ActionBarService } from 'src/app/core/components/actionbar';\nimport { AlertaService } from 'src/app/services/alerta.service';\nimport { UsuarioService } from 'src/app/services/usuario.service';  \nimport { SidebarContainerService } from 'src/app/core/components/sidebar/sidebar-container.service';\nimport { UsuarioModal } from '../../modals/usuario/usuario.modal';\n\n/***********************************\n*  Tela Cadastro de Usu√°rios\n*  @Aplicativo SCAF WEB\n*  @Autor willian.maruno\n***********************************/\n@Component({\n  selector: 'app-usuarios', \n  templateUrl: './usuarios.html',\n  styleUrls: ['./usuarios.scss']\n})\nexport class UsuariosPage implements OnInit{ \n\n  public lista$: Observable<any[]>;\n  public listPerfis: any[]; \n  public filtro: any = {}; \n\n  @ViewChild('filtrosSidebar') filtrosSidebar: TemplateRef<any>;\n  \n  /***************************************************************************************************\n   *            Construtor de pobre\n   ***************************************************************************************************/\n  constructor(private actionBarService: ActionBarService\n    , private sidebarService: SidebarContainerService\n    , public usuarioService: UsuarioService \n    , private alertaService: AlertaService) {\n  }\n\n  /***************************************************************************************************\n   * inicia os componentes\n   ***************************************************************************************************/\n  ngOnInit() {\n    this.usuarioService.findPerfis().subscribe((listPerfis) => {\n      this.listPerfis = listPerfis;\n    }); \n\n    this.sidebarService.open(new TemplatePortal(this.filtrosSidebar, undefined, {})); \n  }\n\n  /***************************************************************************************************\n   *  realiza a pesquisa \n   ***************************************************************************************************/\n  public pesquisar() {\n    this.lista$ = this.usuarioService.find(this.filtro);\n  }\n\n  /***************************************************************************************************\n   * abre a tela de cadastro\n   ***************************************************************************************************/\n  public editar(usuario: any) {\n    this.usuarioService.findById(usuario.codigo).subscribe(\n        (response) => { \n          let data = { usuario: response, listPerfis:this.listPerfis };\n          this.actionBarService.open(UsuarioModal, { data: data }).afterClosed().subscribe((result?: any) => {\n            if (result && result.valor === Constantes.SUCESSO) {\n              this.pesquisar();\n            }\n          });\n        }\n    ); \n  }\n\n  /***************************************************************************************************\n   *  alterar Status\n   ***************************************************************************************************/\n  public alterarStatus(usuario: any, status:string) {\n    let msg = `Deseja mesmo ${status} o Usu√°rio \"${usuario.nome}\"`;\n    this.alertaService.confirmar(`${status} de Usu√°rio`, msg).subscribe((data?: any) => {\n      console.log(data);\n      if (data && data.resultado && data.resultado == Constantes.CONFIRMADO) {\n        this.usuarioService.alterarStatus(usuario, status).subscribe((r?) => {\n          this.alertaService.sucesso(`Usu√°rio \"${usuario.nome}\" ${status} com sucesso!`);\n          this.pesquisar();\n        });\n      }\n    }); \n  }\n\n  /***************************************************************************************************\n   *  remove\n   ***************************************************************************************************/\n  public remover(usuario: any) {\n    let msg = `Deseja mesmo excluir o Usu√°rio \"${usuario.nome}\"`;\n    this.alertaService.confirmar(\"Exclus√£o de Usu√°rio\", msg).subscribe((data?: any) => {\n      console.log(data);\n      if (data && data.resultado && data.resultado == Constantes.CONFIRMADO) {\n        this.usuarioService.remove(usuario.codigo).subscribe((r?) => {\n          this.alertaService.sucesso(`Usu√°rio \"${usuario.nome}\" exclu√≠do com sucesso!`);\n          this.pesquisar();\n        });\n      }\n    }); \n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { UsuariosPage } from './pages/usuarios/usuarios';\n\nconst routes: Routes = [{\n  path: '', component: UsuariosPage\n}];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class UsuariosRoutingModule { }\n ","import { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { DataTableModule } from \"angular-6-datatable\";\n \nimport { ComponentModule } from 'src/app/core/components/component.module';\nimport { ModalsModule } from 'src/app/modals/modals.module';\nimport { ActionbarModule } from 'src/app/core/components/actionbar';\nimport { UsuariosRoutingModule } from './usuarios-routing.module';\nimport { UsuariosPage } from './pages/usuarios/usuarios';\nimport { UsuarioModal } from './modals/usuario/usuario.modal';\nimport { NgSelectModule } from '@ng-select/ng-select';\n\nimport { defineLocale } from 'ngx-bootstrap/chronos';\nimport { ptBrLocale } from 'ngx-bootstrap/locale';\nimport { BsDatepickerModule, BsLocaleService } from 'ngx-bootstrap/datepicker';\nimport { CpfModule, TelefoneModule } from '@nbfontana/ngx-br';\nimport { PipeModule } from 'src/app/core/pipes/pipe.module';\nimport { DirectivesModule } from 'src/app/core/directives/directives.module';\ndefineLocale('pt-br', ptBrLocale); \n\n@NgModule({\n  imports: [\n    CommonModule,\n    DataTableModule,\n    BsDatepickerModule.forRoot(),\n    NgSelectModule,  \n    ActionbarModule, \n    FormsModule,\n    ComponentModule,\n    CpfModule,\n    TelefoneModule,\n    PipeModule,\n    DirectivesModule,\n    ModalsModule,\n    UsuariosRoutingModule\n  ],\n  declarations: [UsuariosPage, UsuarioModal ], \n  entryComponents:[ UsuarioModal ]\n})\nexport class UsuariosModule { } \n ","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';  \nimport { map } from 'rxjs/operators';\n\nimport {environment} from '../../environments/environment';\nimport { Constantes } from '../core/util/constantes';\n \n@Injectable({providedIn: 'root'})\nexport class UsuarioService {\n \n\n\n    constructor(private http: HttpClient) {\n     }\n\n    /***************************************************************************************************\n     * RESOURCE SISTEMA\n     ***************************************************************************************************/\n    private urlSistema(): string {\n        return `${environment.corporativo_url}/sistemas/4`;\n    }   \n\n    /***************************************************************************************************\n     * RESOURCE usuarios cadastrados no scaf\n     ***************************************************************************************************/\n    private urlUsuarioSistema(codigo?: number): string {\n        return `${this.urlSistema()}/usuarios${codigo > 0 ? '/' + codigo : ''}`;\n    }  \n\n    /***************************************************************************************************\n     * RESOURCE usuarios cadastrados no corporativo\n     ***************************************************************************************************/\n    private urlUsuarioCorporativo(codigo?: any): string {\n        return `${environment.corporativo_url}/usuarios${codigo > 0 ? '/' + codigo : ''}`;\n    }  \n\n\n    public findPerfis(): Observable<any[]> {\n        return this.http.get<any[]>(`${this.urlSistema()}/perfis`);\n    }\n\n    public find(filtro:any): Observable<any[]> {\n        let options = {params:filtro};\n        return this.http.get<any[]>(this.urlUsuarioSistema(), options);\n    }\n\n    public findById(codigo: number): Observable<any[]> {\n        return this.http.get<any[]>(this.urlUsuarioSistema(codigo));\n    }\n\n    public save(objeto: any): Observable<any> {\n        if (objeto.codigo > 0) {\n            objeto.id = objeto.codigo;\n            return this.http.put<any>(this.urlUsuarioSistema(objeto.codigo), objeto);\n        } else {\n            return this.http.post<any>(this.urlUsuarioSistema(), objeto); \n        }\n    }\n\n    public alterarStatus(objeto:any, status:string): Observable<any> { \n        return this.http.put<any>(this.urlUsuarioSistema(objeto.codigo)+'/status/'+status, objeto);\n    } \n\n    public remove(codigo: number): Observable<any> {\n        return this.http.delete<any>(this.urlUsuarioSistema(codigo));\n    }   \n\n\n    public findUsuariosCorporativo(filtro:any): Observable<any[]> {\n        let options = {params:filtro};\n        return this.http.get<any[]>(this.urlUsuarioCorporativo(), options);\n    }\n\n    public findUsuarioCorporativoByLogin(login: string): Observable<any> {\n        return this.http.get<any[]>(this.urlUsuarioCorporativo(login)+\"/\");\n    }\n\n    public findFotoUsuarioCorporativo(codigo: number): Observable<any[]> {\n        return this.http.get<any[]>(this.urlUsuarioCorporativo(codigo)+\"/foto\");\n    }\n\n    public saveFotoUsuarioCorporativo(codigo: number, foto:string): Observable<any[]> {\n        let fotoVO = {foto:foto};\n        return this.http.put<any[]>(this.urlUsuarioCorporativo(codigo)+\"/foto\", fotoVO);\n    }\n\n\n    /***************************************************************************************************\n     *  retorna o usu√°rio logado \n     ***************************************************************************************************/\n    public getUsuario(): any {\n        let s = localStorage.getItem(Constantes.USUARIO);\n        if (s && s != '') {\n            return JSON.parse(s);\n        }\n        return {};\n    } \n\n    /***************************************************************************************************\n     *  retorna o c√≥digo do usu√°rio logado\n     ***************************************************************************************************/\n    public getIdUsuario(): any { \n        return this.getUsuario().codigo;\n    } \n    \n    /***************************************************************************************************\n     *  seta o usu√°rio logado \n     ***************************************************************************************************/\n    public setUsuario(access_user:any) {\n        localStorage.setItem(Constantes.ACCESS_USER, JSON.stringify(access_user)); \n        localStorage.setItem(Constantes.USUARIO, JSON.stringify(access_user.usuario)); \n        localStorage.setItem(Constantes.REFRESH_TOKEN, access_user.refresh_token);\n        localStorage.setItem(Constantes.ACCESS_TOKEN, `${access_user.token_type} ${access_user.access_token}`);\n    } \n\n}"],"sourceRoot":""}