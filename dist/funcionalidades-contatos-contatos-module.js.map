{"version":3,"sources":["webpack:///./src/app/funcionalidades/contatos/contatos-routing.module.ts","webpack:///./src/app/funcionalidades/contatos/contatos.module.ts","webpack:///./src/app/funcionalidades/contatos/pages/contatos/contatos.html","webpack:///./src/app/funcionalidades/contatos/pages/contatos/contatos.scss","webpack:///./src/app/funcionalidades/contatos/pages/contatos/contatos.ts","webpack:///./src/app/services/contatos.service.ts"],"names":[],"mappings":"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","file":"funcionalidades-contatos-contatos-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ContatosPage } from './pages/contatos/contatos';\n\nconst routes: Routes = [{\n  path: '', component: ContatosPage\n}];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ContatosRoutingModule { }\n ","import { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { DataTableModule } from \"angular-6-datatable\";\n \nimport { ComponentModule } from 'src/app/core/components/component.module';\nimport { ModalsModule } from 'src/app/modals/modals.module';\nimport { ActionbarModule } from 'src/app/core/components/actionbar'; \nimport { NgSelectModule } from '@ng-select/ng-select';\n\nimport { defineLocale } from 'ngx-bootstrap/chronos';\nimport { ptBrLocale } from 'ngx-bootstrap/locale';\nimport { BsDatepickerModule, BsLocaleService } from 'ngx-bootstrap/datepicker';\nimport { ContatosPage } from './pages/contatos/contatos';\nimport { ContatosRoutingModule } from './contatos-routing.module';\ndefineLocale('pt-br', ptBrLocale); \n\n@NgModule({\n  imports: [\n    CommonModule,\n    DataTableModule,\n    BsDatepickerModule.forRoot(),\n    NgSelectModule,  \n    ActionbarModule, \n    FormsModule,\n    ComponentModule,\n    ModalsModule,\n    ContatosRoutingModule\n  ],\n  declarations: [ContatosPage] \n})\nexport class ContatosModule { } \n ","module.exports = \"<div class=\\\"ss-table ss-table-striped ss-table-sortable\\\">\\n  <table [mfData]=\\\"lista$ | async\\\" #mf=\\\"mfDataTable\\\" [mfRowsOnPage]=\\\"10\\\">\\n    <thead>\\n      <tr>\\n        <th>ID</th> \\n        <th>Data</th>\\n        <th>Nome</th> \\n        <th>E-mail</th>\\n        <th>Assunto</th>\\n        <th>Mensagem</th> \\n        <th></th>\\n      </tr>\\n    </thead>\\n    <tbody>\\n      <tr *ngFor=\\\"let contato of mf.data\\\">\\n        <td>{{ contato.codigo }}</td> \\n        <td>{{ contato.dataInclusao }}</td> \\n        <td>{{ contato.nome }}</td> \\n        <td>{{ contato.email }}</td> \\n        <td>{{ contato.assunto }}</td> \\n        <td>{{ contato.mensagem }}</td>  \\n        <td>\\n          <botao icon=\\\"close\\\" label=\\\"\\\" tipo=\\\"danger\\\" (click)=\\\"remover(contato)\\\" class=\\\"width-50\\\" formato=\\\"inline\\\"></botao>\\n        </td>\\n      </tr>\\n    </tbody> \\n\\n    <tfoot>\\n      <tr>\\n        <td colspan=\\\"7\\\" style=\\\"background-color: #F5F7F8 !important;\\\">\\n          <mfBootstrapPaginator [rowsOnPageSet]=\\\"[5,10,25]\\\"></mfBootstrapPaginator>\\n        </td>\\n      </tr>\\n    </tfoot>\\n  </table>\\n</div>\\n\\n\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';   \n \n\nimport { Constantes } from 'src/app/core/util/constantes';\nimport { ActionBarService } from 'src/app/core/components/actionbar';\nimport { AlertaService } from 'src/app/services/alerta.service';\nimport { ContatosService } from 'src/app/services/contatos.service';\n\n/***********************************\n*  Tela Contatos\n*  @Aplicativo SCAF WEB\n*  @Autor willian.maruno\n***********************************/\n@Component({\n  selector: 'app-contatos', \n  templateUrl: './contatos.html',\n  styleUrls: ['./contatos.scss']\n})\nexport class ContatosPage implements OnInit{ \n\n  public lista$: Observable<any[]>; \n\n  /***************************************************************************************************\n   *            Construtor de pobre\n   ***************************************************************************************************/\n  constructor(private actionBarService: ActionBarService \n    , public contatosService:ContatosService\n    , private alertaService: AlertaService) {\n  }\n\n  /***************************************************************************************************\n   * inicia os componentes\n   ***************************************************************************************************/\n  ngOnInit() {\n    this.pesquisar(); \n  }\n\n  /***************************************************************************************************\n   *  realiza a pesquisa \n   ***************************************************************************************************/\n  public pesquisar() {\n    this.lista$ = this.contatosService.find();\n  }\n\n  /***************************************************************************************************\n   *  remove\n   ***************************************************************************************************/\n  public remover(contato: any) {\n    let msg = `Deseja mesmo excluir o Contato do \"${contato.nome}\" com a seguinte mensagem \"${contato.mensagem}\"?`;\n    this.alertaService.confirmar(\"Exclusão de Contato\", msg).subscribe((data?: any) => {\n      console.log(data);\n      if (data && data.resultado && data.resultado == Constantes.CONFIRMADO) {\n        this.contatosService.remove(contato.codigo).subscribe((r?) => {\n          this.alertaService.sucesso(`Contato do \"${contato.nome}\" excluído com sucesso!`);\n          this.pesquisar();\n        });\n      }\n    }); \n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';  \n\nimport {environment} from '../../environments/environment';\n \n@Injectable({providedIn: 'root'})\nexport class ContatosService {\n\n    constructor(private http: HttpClient) { }\n\n    public find(): Observable<any[]> {\n        return this.http.get<any[]>(`${environment.rest_url}/contatos`); \n    }\n\n    public save(objeto: any): Observable<any> { \n        return this.http.post<any>(`${environment.rest_url}/contatos`, objeto);\n    } \n\n    public remove(codigo: number): Observable<any> {\n        return this.http.delete<any>(`${environment.rest_url}/contatos/${codigo}`);\n    }   \n \n}"],"sourceRoot":""}