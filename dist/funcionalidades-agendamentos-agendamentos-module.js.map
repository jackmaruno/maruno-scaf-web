{"version":3,"sources":["webpack:///./src/app/funcionalidades/agendamentos/agendamentos-routing.module.ts","webpack:///./src/app/funcionalidades/agendamentos/agendamentos.module.ts","webpack:///./src/app/funcionalidades/agendamentos/modals/agendamento/agendamento.modal.html","webpack:///./src/app/funcionalidades/agendamentos/modals/agendamento/agendamento.modal.scss","webpack:///./src/app/funcionalidades/agendamentos/modals/agendamento/agendamento.modal.ts","webpack:///./src/app/funcionalidades/agendamentos/pages/agendamentos/agendamentos.html","webpack:///./src/app/funcionalidades/agendamentos/pages/agendamentos/agendamentos.scss","webpack:///./src/app/funcionalidades/agendamentos/pages/agendamentos/agendamentos.ts","webpack:///./src/app/services/agendamento.service.ts"],"names":[],"mappings":"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","file":"funcionalidades-agendamentos-agendamentos-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AgendamentosPage } from './pages/agendamentos/agendamentos';\n\nconst routes: Routes = [{\n  path: '', component: AgendamentosPage\n}];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AgendamentosRoutingModule { }\n ","import { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { DataTableModule } from \"angular-6-datatable\";\n \nimport { ComponentModule } from 'src/app/core/components/component.module';\nimport { ModalsModule } from 'src/app/modals/modals.module';\nimport { ActionbarModule } from 'src/app/core/components/actionbar';\nimport { AgendamentosRoutingModule } from './agendamentos-routing.module';\nimport { AgendamentosPage } from './pages/agendamentos/agendamentos';\nimport { AgendamentoModal } from './modals/agendamento/agendamento.modal';\nimport { NgSelectModule } from '@ng-select/ng-select';\n\nimport { defineLocale } from 'ngx-bootstrap/chronos';\nimport { ptBrLocale } from 'ngx-bootstrap/locale';\nimport { BsDatepickerModule, BsLocaleService } from 'ngx-bootstrap/datepicker';\ndefineLocale('pt-br', ptBrLocale); \n\n@NgModule({\n  imports: [\n    CommonModule,\n    DataTableModule,\n    BsDatepickerModule.forRoot(),\n    NgSelectModule,  \n    ActionbarModule, \n    FormsModule,\n    ComponentModule,\n    ModalsModule,\n    AgendamentosRoutingModule\n  ],\n  declarations: [AgendamentosPage, AgendamentoModal ], \n  entryComponents:[ AgendamentoModal ]\n})\nexport class AgendamentosModule { } \n ","module.exports = \"<div id=\\\"tag-modal\\\" class=\\\"ss-modal\\\" style=\\\"display:block;\\\">     \\n    <div class=\\\"ss-modal-content\\\" style=\\\"width: 800px;\\\">\\n\\n        <div class=\\\"ss-modal-header\\\">\\n            <span class=\\\"ss-modal-btnclose\\\" (click)=\\\"fechar()\\\">&times;</span>\\n            <h5>Cadastro de Pagamento Agendado</h5>\\n        </div>\\n \\n        <div class=\\\"ss-modal-body\\\" > \\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-sm-6\\\">\\n                    <div class=\\\"ss-form-group\\\" >\\n                        <label>Nome <span class=\\\"campo-obrigatorio-label\\\" >*</span></label>\\n                        <div class=\\\"ss-addon\\\" >    \\n                            <input class=\\\"ss-form-control\\\"  [(ngModel)]=\\\"agendamento.nome\\\" type=\\\"text\\\" maxlength=\\\"250\\\" placeholder=\\\"Nome\\\" scInput >\\n                        </div> \\n                    </div> \\n        \\n                    <div class=\\\"ss-form-group\\\" >\\n                        <label>Descrição <span class=\\\"campo-obrigatorio-label\\\" >*</span></label>\\n                        <div class=\\\"ss-addon\\\" >    \\n                            <textarea class=\\\"ss-form-control\\\" [(ngModel)]=\\\"agendamento.descricao\\\" maxlength=\\\"3750\\\" style=\\\"width: 100% !important;\\\" rows=\\\"7\\\" ></textarea>\\n                        </div> \\n                    </div> \\n\\n                </div>\\n                <div class=\\\"col-sm-6\\\"> \\n        \\n                    <div class=\\\"ss-form-group\\\" >\\n                        <label>Grupo <span class=\\\"campo-obrigatorio-label\\\" >*</span></label>\\n                        <ng-select [items]=\\\"listGrupos\\\" bindLabel=\\\"nome\\\"  placeholder=\\\"Selecione\\\" [(ngModel)]=\\\"grupo\\\"></ng-select> \\n                    </div> \\n        \\n                    <div class=\\\"ss-form-group\\\" >\\n                        <label>Categoria <span class=\\\"campo-obrigatorio-label\\\" >*</span></label>\\n                        <ng-select [items]=\\\"grupo.listCategorias\\\" bindLabel=\\\"nome\\\" placeholder=\\\"Selecione\\\" [(ngModel)]=\\\"agendamento.categoria\\\" ></ng-select> \\n                    </div>  \\n         \\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-sm-6\\\">\\n                            <div class=\\\"ss-form-group\\\" >\\n                                <label>Data de Início <span class=\\\"campo-obrigatorio-label\\\" >*</span></label>\\n                                <div class=\\\"ss-addon\\\" >    \\n                                    <input class=\\\"ss-form-control\\\" [(ngModel)]=\\\"agendamento.dataInicio\\\" type=\\\"tel\\\"  maxlength=\\\"10\\\" scInput bsDatepicker >\\n                                </div> \\n                            </div> \\n                        </div>\\n                        <div class=\\\"col-sm-6\\\">\\n                            <div class=\\\"ss-form-group\\\" >\\n                                <label>Período <span class=\\\"campo-obrigatorio-label\\\" >*</span></label>\\n                                <ng-select [items]=\\\"listPeriodos\\\" bindLabel=\\\"nome\\\"  placeholder=\\\"Selecione\\\" [(ngModel)]=\\\"agendamento.periodo\\\"></ng-select> \\n                            </div> \\n                        </div>\\n                    </div>\\n\\n                </div>\\n            </div> \\n        </div>\\n\\n        <div class=\\\"ss-modal-footer\\\" style=\\\"height: 65px;\\\">   \\n            <div style=\\\"float: right;\\\">\\n                <botao label=\\\"Salvar\\\" formato=\\\"inline\\\" tipo=\\\"success\\\" (click)=\\\"salvar()\\\" ></botao>\\n                <botao label=\\\"Fechar\\\" formato=\\\"inline\\\" tipo=\\\"outline-default\\\" (click)=\\\"fechar()\\\" ></botao> \\n            </div> \\n        </div>\\n    </div> \\n</div> \\n\\n<!-- \\n<button class=\\\"ss-btn ss-btn-format-inline ss-btn-neutral\\\" *ngFor=\\\"let p of listTags\\\" (click)=\\\"p.check = !p.check\\\"\\n    [ngClass]=\\\"{'ss-btn-primary':p.check === true, 'ss-btn-neutral': p.check === false}\\\">\\n    <i class=\\\"material-icons\\\">{{p.check === true ?'check_circle':''}}</i> {{p.nome}}\\n</button>\\n       -->\"","module.exports = \"#tag-modal .ss-modal-body {\\n  margin-top: 20px;\\n  margin-left: 20px;\\n  margin-right: 20px; }\\n\"","import { Component, Inject } from '@angular/core'; \n\nimport { Constantes } from 'src/app/core/util/constantes';\nimport { AlertaService } from 'src/app/services/alerta.service';\nimport { ActionBarRef, ACTIONBAR_DATA } from 'src/app/core/components/actionbar';\nimport { AgendamentoService } from 'src/app/services/agendamento.service';\n \n@Component({\n  selector: 'app-agendamento-modal',\n  templateUrl:'agendamento.modal.html' ,\n  styleUrls: ['agendamento.modal.scss']\n})\nexport class AgendamentoModal {\n\n    public agendamento: any;\n    public grupo:any = {listCategorias:[]};\n    public listGrupos:any[]; \n    public listPeriodos:any[]; \n    public listTags:any[]; \n\n    /***************************************************************************************************\n     *            Construtor de pobre\n     ***************************************************************************************************/\n    constructor(public actionBarRef: ActionBarRef\n              , @Inject(ACTIONBAR_DATA) public data: any\n              , public agendamentoService:AgendamentoService\n              , private alertaService:AlertaService ) {\n        this.listGrupos = data.listGrupos;  \n        this.listPeriodos = data.listPeriodos;  \n        this.listTags = data.listTags;  \n        if(data.agendamento){\n            this.agendamento = Object.assign({}, JSON.parse(JSON.stringify(data.agendamento)));  \n            let categoria =  Object.assign({}, JSON.parse(JSON.stringify(data.agendamento.categoria)));  \n            this.grupo = Object.assign({}, JSON.parse(JSON.stringify(data.agendamento.categoria.grupo)));  \n            this.grupo.listCategorias = [categoria];\n        }else{\n            this.agendamento = {nome:''};  \n        }\n    }\n\n    /***************************************************************************************************\n     * fecha a tela e volta para a tela anterior\n     ***************************************************************************************************/\n    public fechar(valor = 'Fechado') {\n        this.actionBarRef.close({ ...this.data, valor: valor });\n    } \n \n    /***************************************************************************************************\n     * salva o laudo da fiscalização\n     ***************************************************************************************************/\n    public salvar(){ \n        let mensagem = `Pagamento Agendado salvo com sucesso!`;\n        this.agendamentoService.save(this.agendamento).subscribe(\n            () => {  \n                this.data.agendamento = this.agendamento; \n                this.alertaService.sucesso(mensagem);\n                this.fechar(Constantes.SUCESSO);\n            }  \n        ); \n    }\n \n}\n","module.exports = \"<div class=\\\"ss-table ss-table-striped ss-table-sortable\\\">\\n  <table [mfData]=\\\"lista$ | async\\\" #mf=\\\"mfDataTable\\\" [mfRowsOnPage]=\\\"10\\\">\\n    <thead>\\n      <tr>\\n        <th>ID</th> \\n        <th>Nome</th> \\n        <th>Data de Início</th>\\n        <th>Período</th>\\n        <th>Categoria</th>\\n        <th>Etiquetas</th>\\n        <th>Data de Cadastro</th> \\n        <th>Última Alteração</th> \\n        <th></th>\\n      </tr>\\n    </thead>\\n    <tbody>\\n      <tr *ngFor=\\\"let agendamento of mf.data\\\">\\n        <td>{{ agendamento.codigo }}</td> \\n        <td>{{ agendamento.nome }}</td> \\n        <td>{{ agendamento.dataInicio }}</td> \\n        <td>{{ agendamento.periodo.nome }}</td> \\n        <td>{{ agendamento.categoria.nome }}</td> \\n        <td>\\n          <tags-list [tags]=\\\"agendamento.tags\\\" (click)=\\\"openTags(agendamento)\\\"></tags-list>\\n        </td> \\n        <td>{{ agendamento.dataInclusao }}</td> \\n        <td>{{ agendamento.dataAlteracao }}</td> \\n        <td>\\n          <botao [icon]=\\\"agendamento.ativo? 'remove_circle' : 'check_circle'\\\" label=\\\"\\\" [tipo]=\\\"agendamento.ativo? 'outline-danger' : 'outline-success'\\\" (click)=\\\"alterarStatus(agendamento)\\\" class=\\\"width-50\\\" formato=\\\"inline\\\"></botao>\\n          <botao icon=\\\"edit\\\" label=\\\"\\\" tipo=\\\"outline-warning\\\" (click)=\\\"editar(agendamento)\\\" class=\\\"width-50\\\" formato=\\\"inline\\\"></botao>\\n          <botao icon=\\\"close\\\" label=\\\"\\\" tipo=\\\"danger\\\" (click)=\\\"remover(agendamento)\\\" class=\\\"width-50\\\" formato=\\\"inline\\\"></botao>\\n        </td>\\n      </tr>\\n    </tbody>\\n    <tfoot>\\n      <tr>\\n        <td colspan=\\\"8\\\" style=\\\"background-color: #F5F7F8 !important;\\\">\\n          <mfBootstrapPaginator [rowsOnPageSet]=\\\"[5,10,25]\\\"></mfBootstrapPaginator>\\n        </td>\\n      </tr>\\n    </tfoot>\\n  </table>\\n</div>\\n\\n\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';   \n \n\nimport { Constantes } from 'src/app/core/util/constantes';\nimport { ActionBarService } from 'src/app/core/components/actionbar';\nimport { AgendamentoModal } from '../../modals/agendamento/agendamento.modal';\nimport { AlertaService } from 'src/app/services/alerta.service';\nimport { AgendamentoService } from 'src/app/services/agendamento.service';\nimport { ParametrosService } from 'src/app/services/parametros.service';\nimport { TagsService } from 'src/app/services/tags.service';\nimport { TagsModal } from 'src/app/modals/tags/tags.modal';\n\n/***********************************\n*  Tela Cadastro de Pagamentos Agendados\n*  @Aplicativo SCAF WEB\n*  @Autor willian.maruno\n***********************************/\n@Component({\n  selector: 'app-agendamentos', \n  templateUrl: './agendamentos.html',\n  styleUrls: ['./agendamentos.scss']\n})\nexport class AgendamentosPage implements OnInit{ \n\n  public lista$: Observable<any[]>;\n  public listGrupos: any[];\n  public listPeriodos: any[];\n  public listTags: any[];\n\n  /***************************************************************************************************\n   *            Construtor de pobre\n   ***************************************************************************************************/\n  constructor(private actionBarService: ActionBarService\n    , public agendamentoService: AgendamentoService\n    , public parametrosService: ParametrosService\n    , public tagsService:TagsService\n    , private alertaService: AlertaService) {\n  }\n\n  /***************************************************************************************************\n   * inicia os componentes\n   ***************************************************************************************************/\n  ngOnInit() {\n    this.pesquisar();\n    this.parametrosService.findGrupos().subscribe((listGrupos) => {\n      this.listGrupos = listGrupos;\n    });\n    this.parametrosService.findPeriodos().subscribe((listPeriodos) => {\n      this.listPeriodos = listPeriodos;\n    });\n    this.tagsService.findTags().subscribe((listTags) => {\n      this.listTags = listTags;\n    });\n  }\n\n  /***************************************************************************************************\n   *  realiza a pesquisa \n   ***************************************************************************************************/\n  public pesquisar() {\n    this.lista$ = this.agendamentoService.find();\n  }\n\n  /*************************************************************************************************** \n   ***************************************************************************************************/\n\n  public openTags(agendamento: any) {\n    let data = { tags: agendamento.tags, listTags:this.listTags };\n    this.actionBarService.open(TagsModal, { data: data }).afterClosed().subscribe((result?: any) => {\n      if (result && result.valor === Constantes.SUCESSO) {\n        agendamento.tags = result.tags;\n      }\n    });\n  }\n\n  /***************************************************************************************************\n   * abre a tela de cadastro\n   ***************************************************************************************************/\n  public editar(agendamento: any) {\n    let data = { agendamento: agendamento, listGrupos: this.listGrupos, listPeriodos: this.listPeriodos, listTags:this.listTags };\n    this.actionBarService.open(AgendamentoModal, { data: data }).afterClosed().subscribe((result?: any) => {\n      if (result && result.valor === Constantes.SUCESSO) {\n        this.pesquisar();\n      }\n    });\n  }\n\n  /***************************************************************************************************\n   *  alterar Status\n   ***************************************************************************************************/\n  public alterarStatus(agendamento: any) {\n    let msg = `Deseja mesmo ${agendamento.ativo ?'Desativar':'Ativar'} o Pagamento Agendado \"${agendamento.nome}\"`;\n    this.alertaService.confirmar(`${agendamento.ativo ?'Desativação':'Ativação'} de Pagamento Agendado`, msg).subscribe((data?: any) => {\n      console.log(data);\n      if (data && data.resultado && data.resultado == Constantes.CONFIRMADO) {\n        this.agendamentoService.alterarStatus(agendamento).subscribe((r?) => {\n          this.alertaService.sucesso(`Pagamento Agendado \"${agendamento.nome}\" ${agendamento.ativo ?'desativado':'ativado'} com sucesso!`);\n          this.pesquisar();\n        });\n      }\n    }); \n  }\n\n  /***************************************************************************************************\n   *  remove\n   ***************************************************************************************************/\n  public remover(agendamento: any) {\n    let msg = `Deseja mesmo excluir o Pagamento Agendado \"${agendamento.nome}\"`;\n    this.alertaService.confirmar(\"Exclusão de Pagamento Agendado\", msg).subscribe((data?: any) => {\n      console.log(data);\n      if (data && data.resultado && data.resultado == Constantes.CONFIRMADO) {\n        this.agendamentoService.remove(agendamento.codigo).subscribe((r?) => {\n          this.alertaService.sucesso(`Pagamento Agendado \"${agendamento.nome}\" excluído com sucesso!`);\n          this.pesquisar();\n        });\n      }\n    }); \n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';  \nimport { map } from 'rxjs/operators';\n\nimport {environment} from '../../environments/environment';\n \n@Injectable({providedIn: 'root'})\nexport class AgendamentoService {\n\n    constructor(private http: HttpClient) { }\n\n    public find(): Observable<any[]> {\n        return this.http.get<any[]>(this.RESOURCE());\n        // .pipe(\n        //     map((response: any) => response.map(i => ({ ...i, codigo:i.id })))\n        //   );\n    }\n\n    public save(objeto: any): Observable<any> {\n        if (objeto.codigo > 0) {\n            // objeto.id = objeto.codigo;\n            return this.http.put<any>(this.RESOURCE(objeto.codigo), objeto);\n        } else {\n            return this.http.post<any>(this.RESOURCE(), objeto);\n        }\n    }\n\n    public alterarStatus(objeto:any): Observable<any> {\n        if (objeto.ativo) {\n            objeto.ativo = false;\n            return this.http.put<any>(this.RESOURCE(objeto.codigo)+'/desativar', objeto);\n        } else {\n            objeto.ativo = true;\n            return this.http.put<any>(this.RESOURCE(objeto.codigo)+'/ativar', objeto);\n        }\n    }\n\n    public remove(codigo: number): Observable<any> {\n        return this.http.delete<any>(this.RESOURCE(codigo));\n    }   \n\n    /***************************************************************************************************\n     * RESOURCE\n     ***************************************************************************************************/\n    public RESOURCE(codigo?: number): string {\n        return `${environment.rest_url}/agendamentos${codigo > 0 ? '/' + codigo : ''}`;\n    }  \n}"],"sourceRoot":""}